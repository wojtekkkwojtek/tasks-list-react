{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","useTasks.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","contentTrimmed","trim","current","focus","autoFocus","ref","value","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","Wrapper","div","Buttons","toggleHideDone","setAllDone","length","disabled","every","section","Header","header","Body","Title","h2","Section","title","body","extraHeaderContent","Container","children","getFirstTasks","tasksInLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b412ffa6.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    background: teal;\r\n    color: white;\r\n    border: none;\r\n    transition: 0.5s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background: rgb(0, 128, 90);\r\n        transform: scale(1.3); \r\n    }\r\n\r\n    &:active {\r\n        background: rgb(0, 128, 43);\r\n    }\r\n`;","import {useState, useRef} from \"react\";\r\nimport {StyledForm, Input, Button} from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n    \r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const contentTrimmed = newTaskContent.trim();\r\n            if (contentTrimmed !== \"\") {\r\n                addNewTask(contentTrimmed);\r\n            };\r\n        \r\n        setNewTaskContent(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n    \r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input \r\n                autoFocus\r\n                ref={inputRef}\r\n                value={newTaskContent}  \r\n                placeholder=\"Rzecz do zrobienia\" \r\n                onChange={(event) => setNewTaskContent(event.target.value)} \r\n            />\r\n            \r\n            <Button>Dodaj zadanie</Button>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, {css} from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n    word-break: break-word;\r\n\r\n    ${({hidden}) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({done}) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background-color: white;\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n    transition: background-color 0.5s;\r\n    cursor: pointer;\r\n\r\n    ${({toggleDone}) => toggleDone && css`\r\n        background-color: rgb(0, 128, 64);\r\n\r\n        &:hover {\r\n            background-color: rgb(1, 95, 48);\r\n        }\r\n\r\n        &:active {\r\n            background-color: rgb(2, 49, 25);\r\n        }\r\n    `}\r\n\r\n    ${({remove}) => remove && css`\r\n        background-color: rgb(199, 3, 3);\r\n\r\n        &:hover {\r\n            background-color: rgb(138, 3, 3);\r\n        }\r\n\r\n        &:active {\r\n            background-color: rgb(80, 1, 1);\r\n        }\r\n    `}\r\n`;","import {List, Item, Content, Button} from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </Button>\r\n            \r\n                <Content done={task.done}>\r\n                    {task.content}    \r\n                </Content>\r\n            \r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ—‘\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-size: medium;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    color: teal;\r\n    border: none;\r\n    margin: 10px;\r\n    transition: background-color 0.5s;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(2, 73, 73);\r\n    }\r\n\r\n    &:active {\r\n        color: rgb(1, 22, 22);\r\n    }\r\n\r\n    &:disabled {\r\n        color: #ccc;\r\n        cursor: not-allowed;\r\n    }\r\n`;","import React from \"react\";\r\nimport {Wrapper, Button} from \"./styled\";\r\n\r\nconst Buttons = ({tasks, hideDone, toggleHideDone, setAllDone}) => (\r\n\r\n    <Wrapper>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button \r\n                    onClick={toggleHideDone} \r\n                >\r\n                    {hideDone ? \"PokaÅ¼ \" : \"Ukryj \"} \r\n                        zrobione\r\n                </Button>\r\n                \r\n                <Button \r\n                    onClick={setAllDone} \r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 10px 0;\r\n    background: white;\r\n    box-shadow: 0 0 5px #ddd;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    border-bottom: 1px solid #ddd;\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 1.5em;\r\n    margin: 0;\r\n`;","import {Wrapper, Header, Body, Title} from \"./styled\"\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n\r\n    <Wrapper>\r\n        <Header>\r\n            <Title>{title}</Title>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        <Body>\r\n            {body}\r\n        </Body>\r\n    </Wrapper>\r\n\r\n);\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n    font-family: 'Roboto', sans-serif;\r\n`;","import {Wrapper} from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Wrapper>{children}</Wrapper>\r\n);\r\n\r\nexport default Container;","import {useEffect, useState} from \"react\";\r\n\r\nconst getFirstTasks = () => {\r\n    const tasksInLocalStorage = localStorage.getItem(\"tasks\");\r\n    \r\n    return tasksInLocalStorage\r\n      ? JSON.parse(tasksInLocalStorage)\r\n      : [];\r\n};\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(getFirstTasks); \r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n      }, [tasks]);\r\n    \r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n      \r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => task.id === id? {\r\n          ...task, done: !task.done } : task));\r\n    };\r\n      \r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\r\n    };\r\n      \r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n          ...tasks, \r\n          { \r\n            content,\r\n            done: false,\r\n            id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1, \r\n          },\r\n        ]);\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        setAllDone,\r\n        addNewTask,\r\n    };\r\n};","import {useState} from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport {useTasks} from \"./useTasks\";\n\nfunction App() {\n  \n  /*const sampleTasks = [\n      { id: 1, content: \"PrzykÅ‚adowe pierwsze zadanie\", done: true },\n      { id: 2, content: \"PrzykÅ‚adowe drugie zadanie\", done: false },\n      { id: 3, content: \"PrzykÅ‚adowe trzecie zadanie\", done: false },\n  ];*/\n  \n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n  \n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" \n      />\n      \n      <Section \n        title=\"Dodaj nowe zadanie\" \n        body={\n          <Form addNewTask={addNewTask} \n          />\n        } \n      />\n      \n      <Section \n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks \n          tasks={tasks} \n          hideDone={hideDone} \n          removeTask={removeTask} \n          toggleTaskDone={toggleTaskDone} \n          />\n        }\n        extraHeaderContent={\n          <Buttons \n            tasks={tasks} \n            hideDone={hideDone} \n            toggleHideDone={toggleHideDone} \n            setAllDone={setAllDone} \n            />\n          } \n        />\n      </Container>\n    );\n  }\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        background:rgb(178, 199, 218);\r\n    }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {GlobalStyle} from \"./GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}