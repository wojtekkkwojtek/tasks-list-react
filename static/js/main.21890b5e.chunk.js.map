{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","contentTrimmed","trim","value","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","Wrapper","div","Buttons","toggleHideDone","setAllDone","length","disabled","every","section","Header","header","Body","Title","h2","Section","title","body","extraHeaderContent","Container","children","App","setHideDone","tasksInLocalStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAEaA,EAAaC,IAAOC,KAAV,0LAUVC,EAAQF,IAAOG,MAAV,6EAKLC,EAASJ,IAAOK,OAAV,wT,OCYJC,EA1BF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACZ,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAYA,OACI,eAACX,EAAD,CAAYY,SAXK,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAiBL,EAAeM,OACX,KAAnBD,GACAP,EAAWO,GAGnBJ,EAAkB,KAIlB,UACI,cAACR,EAAD,CACIc,MAAOP,EACPQ,YAAY,qBACZC,SAAU,SAACN,GAAD,OAAWF,EAAkBE,EAAMO,OAAOH,UAGxD,cAACZ,EAAD,gCCtBCgB,EAAOpB,IAAOqB,GAAV,oFAMJC,EAAOtB,IAAOuB,GAAV,0OASX,qBAAEC,QAAsBC,YAAJ,2DAKbC,EAAU1B,IAAO2B,KAAV,qCACd,qBAAEC,MAAkBH,YAAJ,2EAKTrB,EAASJ,IAAOK,OAAV,uNASb,qBAAEwB,YAA8BJ,YAAJ,8OAY5B,qBAAEK,QAAsBL,YAAJ,4OClBXM,EA7BD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,eAAhC,OACV,cAACf,EAAD,UACKY,EAAMI,KAAI,SAAAC,GAAI,OACX,eAACf,EAAD,CAEIE,OAAQa,EAAKT,MAAQK,EAFzB,UAII,cAAC,EAAD,CACIJ,YAAU,EACVS,QAAS,kBAAMH,EAAeE,EAAKE,KAFvC,SAIKF,EAAKT,KAAO,SAAM,KAGvB,cAACF,EAAD,CAASE,KAAMS,EAAKT,KAApB,SACKS,EAAKG,UAGV,cAAC,EAAD,CACIV,QAAM,EACNQ,QAAS,kBAAMJ,EAAWG,EAAKE,KAFnC,4BAdKF,EAAKE,UCJbE,EAAUzC,IAAO0C,IAAV,8FAMPtC,EAASJ,IAAOK,OAAV,4cCkBJsC,EAvBC,SAAC,GAAD,IAAEX,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAUW,EAAnB,EAAmBA,eAAgBC,EAAnC,EAAmCA,WAAnC,OAEZ,cAACJ,EAAD,UACKT,EAAMc,OAAS,GACZ,qCACI,eAAC,EAAD,CACIR,QAASM,EADb,UAGKX,EAAW,cAAW,SAH3B,cAOA,cAAC,EAAD,CACIK,QAASO,EACTE,SAAUf,EAAMgB,OAAM,qBAAGpB,QAF7B,yCCbHa,EAAUzC,IAAOiD,QAAV,wGAMPC,EAASlD,IAAOmD,OAAV,kTAcNC,EAAOpD,IAAO0C,IAAV,gDAIJW,EAAQrD,IAAOsD,GAAV,mECVHC,EAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OAEZ,eAAC,EAAD,WACI,eAAC,EAAD,WACI,cAACL,EAAD,UAAQG,IACPE,KAEL,cAACN,EAAD,UACKK,QCJEP,EANA,SAAC,GAAD,IAAGM,EAAH,EAAGA,MAAH,OACX,iCACI,6BAAKA,OCAAf,EAAUzC,IAAO0C,IAAV,oICILiB,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,cAAC,EAAD,UAAUA,KC2FCC,I,EAAAA,EAtFf,WAQE,MAAgCrD,oBAAS,GAAzC,mBAAOyB,EAAP,KAAiB6B,EAAjB,KAEMC,EAAsBC,aAAaC,QAAQ,SAEjD,EAA0BzD,mBACxBuD,EACIG,KAAKC,MAAMJ,GACX,IAHN,mBAAO/B,EAAP,KAAcoC,EAAd,KAsCA,OAhCAC,qBAAU,WACRL,aAAaM,QAAQ,QAASJ,KAAKK,UAAUvC,MAC5C,CAACA,IA+BF,eAAC,EAAD,WACE,cAAC,EAAD,CAAQwB,MAAM,qBAGd,cAAC,EAAD,CACEA,MAAM,qBACNC,KACE,cAAC,EAAD,CAAMlD,WAnBK,SAACiC,GAClB4B,GAAS,SAAApC,GAAK,4BACTA,GADS,CAEZ,CACEQ,UACAZ,MAAM,EACNW,GAAqB,IAAjBP,EAAMc,OAAe,EAAId,EAAMA,EAAMc,OAAS,GAAGP,GAAK,aAkB5D,cAAC,EAAD,CACEiB,MAAM,mBACNC,KACE,cAAC,EAAD,CACAzB,MAAOA,EACPC,SAAUA,EACVC,WA3CW,SAACK,GAClB6B,GAAS,SAAApC,GAAK,OAAIA,EAAMwC,QAAO,SAAAnC,GAAI,OAAIA,EAAKE,KAAOA,SA2C7CJ,eAxCe,SAACI,GACtB6B,GAAS,SAAApC,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAAI,OAAIA,EAAKE,KAAOA,EAAZ,2BAC/BF,GAD+B,IACzBT,MAAOS,EAAKT,OAASS,WAyC5BqB,mBACE,cAAC,EAAD,CACE1B,MAAOA,EACPC,SAAUA,EACVW,eAvDa,WACrBkB,GAAY,SAAA7B,GAAQ,OAAKA,MAuDjBY,WA3CS,WACjBuB,GAAS,SAAApC,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAAI,kCAAUA,GAAV,IAAgBT,MAAM,mBChC3C6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLDQ,GAAcC,YAAH,gNCIxBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACJ,GAAD,IACE,cAAC,EAAD,OAEJK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.21890b5e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    background: teal;\r\n    color: white;\r\n    border: none;\r\n    transition: 0.5s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background: rgb(0, 128, 90);\r\n        transform: scale(1.3); \r\n    }\r\n\r\n    &:active {\r\n        background: rgb(0, 128, 43);\r\n    }\r\n`;","import {useState} from \"react\";\r\nimport {StyledForm, Input, Button} from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    \r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const contentTrimmed = newTaskContent.trim();\r\n            if (contentTrimmed !== \"\") {\r\n                addNewTask(contentTrimmed);\r\n            };\r\n        \r\n        setNewTaskContent(\"\");\r\n    };\r\n    \r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input \r\n                value={newTaskContent}  \r\n                placeholder=\"Rzecz do zrobienia\" \r\n                onChange={(event) => setNewTaskContent(event.target.value)} \r\n            />\r\n            \r\n            <Button>Dodaj zadanie</Button>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, {css} from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n    word-break: break-word;\r\n\r\n    ${({hidden}) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({done}) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background-color: white;\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n    transition: background-color 0.5s;\r\n    cursor: pointer;\r\n\r\n    ${({toggleDone}) => toggleDone && css`\r\n        background-color: rgb(0, 128, 64);\r\n\r\n        &:hover {\r\n            background-color: rgb(1, 95, 48);\r\n        }\r\n\r\n        &:active {\r\n            background-color: rgb(2, 49, 25);\r\n        }\r\n    `}\r\n\r\n    ${({remove}) => remove && css`\r\n        background-color: rgb(199, 3, 3);\r\n\r\n        &:hover {\r\n            background-color: rgb(138, 3, 3);\r\n        }\r\n\r\n        &:active {\r\n            background-color: rgb(80, 1, 1);\r\n        }\r\n    `}\r\n`;","import {List, Item, Content, Button} from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </Button>\r\n            \r\n                <Content done={task.done}>\r\n                    {task.content}    \r\n                </Content>\r\n            \r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ—‘\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-size: medium;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    color: teal;\r\n    border: none;\r\n    margin: 10px;\r\n    transition: background-color 0.5s;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(2, 73, 73);\r\n    }\r\n\r\n    &:active {\r\n        color: rgb(1, 22, 22);\r\n    }\r\n\r\n    &:disabled {\r\n        color: #ccc;\r\n        cursor: not-allowed;\r\n    }\r\n`;","import React from \"react\";\r\nimport {Wrapper, Button} from \"./styled\";\r\n\r\nconst Buttons = ({tasks, hideDone, toggleHideDone, setAllDone}) => (\r\n\r\n    <Wrapper>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button \r\n                    onClick={toggleHideDone} \r\n                >\r\n                    {hideDone ? \"PokaÅ¼ \" : \"Ukryj \"} \r\n                        zrobione\r\n                </Button>\r\n                \r\n                <Button \r\n                    onClick={setAllDone} \r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 10px 0;\r\n    background: white;\r\n    box-shadow: 0 0 5px #ddd;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    border-bottom: 1px solid #ddd;\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 1.5em;\r\n    margin: 0;\r\n`;","import {Wrapper, Header, Body, Title} from \"./styled\"\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n\r\n    <Wrapper>\r\n        <Header>\r\n            <Title>{title}</Title>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        <Body>\r\n            {body}\r\n        </Body>\r\n    </Wrapper>\r\n\r\n);\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n    font-family: 'Roboto', sans-serif;\r\n`;","import {Wrapper} from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <Wrapper>{children}</Wrapper>\r\n);\r\n\r\nexport default Container;","import {useState, useEffect} from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  \n  /*const sampleTasks = [\n      { id: 1, content: \"PrzykÅ‚adowe pierwsze zadanie\", done: true },\n      { id: 2, content: \"PrzykÅ‚adowe drugie zadanie\", done: false },\n      { id: 3, content: \"PrzykÅ‚adowe trzecie zadanie\", done: false },\n  ];*/\n  \n  const [hideDone, setHideDone] = useState(false);\n\n  const tasksInLocalStorage = localStorage.getItem(\"tasks\");\n  \n  const [tasks, setTasks] = useState(\n    tasksInLocalStorage\n      ? JSON.parse(tasksInLocalStorage)\n      : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n  \n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n  \n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => task.id === id? {\n      ...task, done: !task.done } : task));\n  };\n  \n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\n  };\n  \n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks, \n      { \n        content,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1, \n      },\n    ]);\n  };\n  \n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" \n      />\n      \n      <Section \n        title=\"Dodaj nowe zadanie\" \n        body={\n          <Form addNewTask={addNewTask} \n          />\n        } \n      />\n      \n      <Section \n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks \n          tasks={tasks} \n          hideDone={hideDone} \n          removeTask={removeTask} \n          toggleTaskDone={toggleTaskDone} \n          />\n        }\n        extraHeaderContent={\n          <Buttons \n            tasks={tasks} \n            hideDone={hideDone} \n            toggleHideDone={toggleHideDone} \n            setAllDone={setAllDone} \n            />\n          } \n        />\n      </Container>\n    );\n  }\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        background:rgb(178, 199, 218);\r\n    }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {GlobalStyle} from \"./GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}