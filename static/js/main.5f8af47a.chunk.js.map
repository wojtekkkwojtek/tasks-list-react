{"version":3,"sources":["reportWebVitals.js","GlobalStyle.js","features/tasks/Form/styled.js","features/tasks/tasksSlice.js","features/tasks/Form/index.js","features/tasks/TaskList/styled.js","features/tasks/TaskList/index.js","features/tasks/Buttons/styled.js","features/tasks/Buttons/index.js","common/Section/styled.js","common/Section/index.js","common/Header/index.js","common/Container/styled.js","common/Container/index.js","features/tasks/Tasks.js","App.js","store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","StyledForm","styled","form","Input","input","Button","button","tasksSlice","createSlice","name","initialState","tasks","hideDone","reducers","addTask","task","payload","push","toggleHideDone","state","toggleTaskDone","taskId","index","findIndex","id","done","removeTask","splice","setAllDone","actions","selectTasks","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","contentTrimmed","trim","content","nanoid","current","focus","autoFocus","ref","value","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","toggleDone","remove","TaskList","useSelector","map","onClick","Wrapper","div","Buttons","length","disabled","every","section","Header","header","Body","Title","h2","Section","title","body","extraHeaderContent","Container","children","Tasks","App","configureStore","reducer","tasksReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.5f8af47a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        background:rgb(178, 199, 218);\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    background: teal;\r\n    color: white;\r\n    border: none;\r\n    transition: 0.5s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background: rgb(0, 128, 90);\r\n        transform: scale(1.3); \r\n    }\r\n\r\n    &:active {\r\n        background: rgb(0, 128, 43);\r\n    }\r\n`;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n        tasks: [\r\n            /*{ \r\n                id: 1, \r\n                content: \"PrzykÅ‚adowe pierwsze zadanie\", \r\n                done: true \r\n            },*/\r\n        ],\r\n        hideDone: false,\r\n    },\r\n    reducers: {\r\n        addTask: ({tasks}, {payload: task}) => {\r\n            tasks.push(task);\r\n        },\r\n        toggleHideDone: state => {\r\n            state.hideDone = !state.hideDone;\r\n        },\r\n        toggleTaskDone: ({tasks}, {payload: taskId}) => {\r\n            const index = tasks.findIndex(({id}) => id === taskId);\r\n            tasks[index].done = !tasks[index].done;\r\n        },\r\n        removeTask: ({tasks}, {payload: taskId}) => {\r\n            const index = tasks.findIndex(({id}) => id === taskId);\r\n            tasks.splice(index, 1);\r\n        },\r\n        setAllDone: ({tasks}) => {\r\n            for (const task of tasks) {\r\n                task.done = true;\r\n            } \r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    addTask, \r\n    toggleHideDone, \r\n    toggleTaskDone, \r\n    removeTask, \r\n    setAllDone,\r\n} = tasksSlice.actions;\r\nexport const selectTasks = state => state.tasks;\r\nexport default tasksSlice.reducer;","import {useState, useRef} from \"react\";\r\nimport {StyledForm, Input, Button} from \"./styled\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {nanoid} from \"@reduxjs/toolkit\";\r\nimport {addTask} from \"../tasksSlice\";\r\n\r\nconst Form = () => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const contentTrimmed = newTaskContent.trim();\r\n            \r\n        if (!contentTrimmed) {\r\n            return;\r\n        }\r\n        \r\n        dispatch(addTask({\r\n            content: contentTrimmed,\r\n            done: false,\r\n            id: nanoid(),\r\n        }));\r\n\r\n        setNewTaskContent(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n    \r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input \r\n                autoFocus\r\n                ref={inputRef}\r\n                value={newTaskContent}  \r\n                placeholder=\"Rzecz do zrobienia\" \r\n                onChange={(event) => setNewTaskContent(event.target.value)} \r\n            />\r\n            <Button>Dodaj zadanie</Button>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, {css} from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n    word-break: break-word;\r\n\r\n    ${({hidden}) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({done}) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background-color: white;\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n    transition: background-color 0.5s;\r\n    cursor: pointer;\r\n\r\n    ${({toggleDone}) => toggleDone && css`\r\n        background-color: rgb(0, 128, 64);\r\n\r\n        &:hover {\r\n            background-color: rgb(1, 95, 48);\r\n        }\r\n\r\n        &:active {\r\n            background-color: rgb(2, 49, 25);\r\n        }\r\n    `}\r\n\r\n    ${({remove}) => remove && css`\r\n        background-color: rgb(199, 3, 3);\r\n\r\n        &:hover {\r\n            background-color: rgb(138, 3, 3);\r\n        }\r\n\r\n        &:active {\r\n            background-color: rgb(80, 1, 1);\r\n        }\r\n    `}\r\n`;","import {List, Item, Content, Button} from \"./styled\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {selectTasks, toggleTaskDone, removeTask} from \"../tasksSlice\";\r\n\r\nconst TaskList = () => {\r\n    const {tasks, hideDone} = useSelector(selectTasks);\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <List>\r\n            {tasks.map(task => (\r\n                <Item\r\n                    key={task.id}\r\n                    hidden={task.done && hideDone}\r\n                >\r\n                    <Button\r\n                        toggleDone\r\n                        onClick={() => dispatch(toggleTaskDone(task.id))}\r\n                    >\r\n                        {task.done ? \"âœ“\" : \"\"}\r\n                    </Button>\r\n            \r\n                    <Content done={task.done}>\r\n                        {task.content}    \r\n                    </Content>\r\n            \r\n                    <Button\r\n                        remove\r\n                        onClick={() => dispatch(removeTask(task.id))}\r\n                    >\r\n                        ðŸ—‘\r\n                    </Button>\r\n                </Item>\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default TaskList;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-size: medium;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    color: teal;\r\n    border: none;\r\n    margin: 10px;\r\n    transition: background-color 0.5s;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(2, 73, 73);\r\n    }\r\n\r\n    &:active {\r\n        color: rgb(1, 22, 22);\r\n    }\r\n\r\n    &:disabled {\r\n        color: #ccc;\r\n        cursor: not-allowed;\r\n    }\r\n`;","import React from \"react\";\r\nimport {Wrapper, Button} from \"./styled\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectTasks, toggleHideDone, setAllDone} from \"../tasksSlice\";\r\n\r\nconst Buttons = () => {\r\n    const {tasks, hideDone} = useSelector(selectTasks);\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <Wrapper>\r\n            {tasks.length > 0 && (\r\n                <>\r\n                    <Button \r\n                        onClick={() => dispatch(toggleHideDone())} \r\n                    >\r\n                        {hideDone ? \"PokaÅ¼ \" : \"Ukryj \"} \r\n                            zrobione\r\n                    </Button>\r\n                \r\n                    <Button \r\n                        onClick={() => dispatch(setAllDone())} \r\n                        disabled={tasks.every(({ done }) => done)}\r\n                    >\r\n                        UkoÅ„cz wszystkie\r\n                    </Button>\r\n                </>\r\n            )}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 10px 0;\r\n    background: white;\r\n    box-shadow: 0 0 5px #ddd;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    border-bottom: 1px solid #ddd;\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 1.5em;\r\n    margin: 0;\r\n`;","import {Wrapper, Header, Body, Title} from \"./styled\"\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <Wrapper>\r\n        <Header>\r\n            <Title>{title}</Title>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        <Body>\r\n            {body}\r\n        </Body>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n    font-family: 'Roboto', sans-serif;\r\n`;","import {Wrapper} from \"./styled\";\r\n\r\nconst Container = ({children}) => (\r\n    <Wrapper>{children}</Wrapper>\r\n);\r\n\r\nexport default Container;","import Form from \"./Form\";\nimport TaskList from \"./TaskList\";\nimport Buttons from \"./Buttons\";\nimport Section from \"../../common/Section\";\nimport Header from \"../../common/Header\";\nimport Container from \"../../common/Container\";\n\nfunction Tasks() {\n  /*const sampleTasks = [\n      { id: 1, content: \"PrzykÅ‚adowe pierwsze zadanie\", done: true },\n      { id: 2, content: \"PrzykÅ‚adowe drugie zadanie\", done: false },\n      { id: 3, content: \"PrzykÅ‚adowe trzecie zadanie\", done: false },\n  ];*/\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\"/>\n      <Section \n        title=\"Dodaj nowe zadanie\" \n        body={<Form/>} \n      />\n      <Section \n        title=\"Lista zadaÅ„\"\n        body={<TaskList/>}\n        extraHeaderContent={<Buttons/>} \n      />\n    </Container>\n  );\n}\n\nexport default Tasks;","import Tasks from './features/tasks/Tasks';\r\n\r\nconst App = () => <Tasks/>;\r\n\r\nexport default App ;","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport tasksReducer from './features/tasks/tasksSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {GlobalStyle} from \"./GlobalStyle\";\nimport App from './App';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}