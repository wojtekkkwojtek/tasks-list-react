{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","contentTrimmed","trim","value","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","tasksInLocalStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c2d7ea0.chunk.js","sourcesContent":["import \"./style.css\"\r\nimport { useState } from \"react\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    \r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const contentTrimmed = newTaskContent.trim();\r\n            if (contentTrimmed !== \"\") {\r\n                addNewTask(contentTrimmed);\r\n            };\r\n        \r\n        setNewTaskContent(\"\");\r\n    };\r\n    \r\n    return (\r\n        <form className=\"form\" \r\n        onSubmit={onFormSubmit}>\r\n            <input value={newTaskContent} \r\n            className=\"form__input\" \r\n            placeholder=\"Rzecz do zrobienia\" \r\n            onChange={(event) => setNewTaskContent(event.target.value)} />\r\n                <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n\r\n","import \"./style.css\"\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"tasks\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`tasks__item ${task.done && hideDone ? \"tasks__item--hidden\" : \"\"}`}>\r\n                    <button className=\"tasks__button tasks__button--toggleDone\"\r\n                    onClick={() => toggleTaskDone(task.id)}>\r\n                        {task.done ? \"âœ“\" : \"\"}\r\n                    </button>\r\n                \r\n                <span className={`tasks__content ${task.done ? \"tasks__content--done\" : \"\"}`}>\r\n                    {task.content}\r\n                </span>\r\n                \r\n                <button\r\n                    className=\"tasks__button tasks__button--remove\"\r\n                    onClick={() => removeTask(task.id)}>\r\n                    ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n\r\n    <div className=\"buttons\">\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <button \r\n                onClick={toggleHideDone} \r\n                className=\"buttons__button\">\r\n                    {hideDone ? \"PokaÅ¼ \" : \"Ukryj \"} \r\n                        zrobione\r\n                </button>\r\n                \r\n                <button \r\n                onClick={setAllDone} \r\n                className=\"buttons__button\"\r\n                disabled={tasks.every(({ done }) => done)}>\r\n                    UkoÅ„cz wszystkie\r\n                </button>\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\"\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n            <h2 className=\"section__title\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </header>\r\n        <div className=\"section__body\">\r\n            {body}\r\n        </div>\r\n    </section>\r\n\r\n);\r\n\r\nexport default Section;\r\n","const Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">{children}</main>\r\n);\r\n\r\nexport default Container;","import { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  \n  /*const sampleTasks = [\n      { id: 1, content: \"PrzykÅ‚adowe pierwsze zadanie\", done: true },\n      { id: 2, content: \"PrzykÅ‚adowe drugie zadanie\", done: false },\n      { id: 3, content: \"PrzykÅ‚adowe trzecie zadanie\", done: false },\n  ];*/\n  \n  const [hideDone, setHideDone] = useState(false);\n\n  const tasksInLocalStorage = localStorage.getItem(\"tasks\");\n  \n  const [tasks, setTasks] = useState(\n    tasksInLocalStorage\n      ? JSON.parse(tasksInLocalStorage)\n      : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n  \n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n  \n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => task.id === id? {\n      ...task, done: !task.done } : task));\n  };\n  \n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\n  };\n  \n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks, \n      { \n        content,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1, \n      },\n    ]);\n  };\n  \n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" \n      />\n      \n      <Section \n        title=\"Dodaj nowe zadanie\" \n        body={\n          <Form addNewTask={addNewTask} \n          />\n        } \n      />\n      \n      <Section \n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks \n          tasks={tasks} \n          hideDone={hideDone} \n          removeTask={removeTask} \n          toggleTaskDone={toggleTaskDone} \n          />\n        }\n        extraHeaderContent={\n          <Buttons \n            tasks={tasks} \n            hideDone={hideDone} \n            toggleHideDone={toggleHideDone} \n            setAllDone={setAllDone} \n            />\n          } \n        />\n      </Container>\n    );\n  }\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}